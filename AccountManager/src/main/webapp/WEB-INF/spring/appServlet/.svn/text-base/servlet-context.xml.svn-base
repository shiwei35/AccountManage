<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing 
		infrastructure -->
	<context:component-scan base-package="com.aisino.finace.account">
		<context:include-filter type="annotation"
			expression="org.springframework.stereotype.Controller" />
		<context:exclude-filter type="annotation"
			expression="org.springframework.stereotype.Service" />
	</context:component-scan>
 
	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven>
		<message-converters>
			<beans:bean
				class="org.springframework.http.converter.json.MappingJacksonHttpMessageConverter">
				<beans:property name="objectMapper" ref="customObjectMapper"></beans:property>
			</beans:bean>
		</message-converters>
	</annotation-driven>

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving 
		up static resources in the ${webappRoot}/resources directory -->
	<resources mapping="/resources/**" location="/resources/" />
	
	<!-- Resolves views selected for rendering by @Controllers to .jsp resources 
		in the /WEB-INF/views directory -->
	<beans:bean
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>

	<beans:bean
		class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter">
		<beans:property name="messageConverters">
			<beans:list>
				<beans:bean
					class="org.springframework.http.converter.json.MappingJacksonHttpMessageConverter">
					<beans:property name="supportedMediaTypes">
						<beans:list>
							<beans:value>text/html;charset=UTF-8</beans:value>
						</beans:list>
					</beans:property>
				</beans:bean>
			</beans:list>
		</beans:property>
	</beans:bean>

	<beans:bean id="multipartResolver"
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<beans:property name="defaultEncoding">
			<beans:value>UTF-8</beans:value>
		</beans:property>
		<beans:property name="maxUploadSize">
			<beans:value>32505856</beans:value><!-- 上传文件大小限制为31M，31*1024*1024 -->
		</beans:property>
		<beans:property name="maxInMemorySize">
			<beans:value>4096</beans:value>
		</beans:property>
	</beans:bean>

	<!-- Support Shiro Annotation -->
	<beans:bean
		class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">
		<beans:property name="defaultErrorView">
			<beans:value>unKnownErr</beans:value>
		</beans:property>
		<beans:property name="exceptionMappings">
			<beans:props>
				<!-- <prop key="org.apache.shiro.authc.AuthenticationException">noPermission</prop> 
					<prop key="org.apache.shiro.authc.ExpiredCredentialsException">noPermission</prop> -->
				<beans:prop key="org.apache.shiro.authz.UnauthorizedException">noPermission</beans:prop>
				<beans:prop key="org.apache.shiro.authz.AuthorizationException">noPermission</beans:prop>
			</beans:props>
		</beans:property>
		<!-- 设置日志输出级别，不定义则默认不输出警告等错误日志信息 -->
		<beans:property name="warnLogCategory"
			value="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver" />
	</beans:bean>
	<beans:bean
		class="org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator"
		depends-on="lifecycleBeanPostProcessor">
		<beans:property name="proxyTargetClass" value="true" />
	</beans:bean>
	<beans:bean
		class="org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor">
		<beans:property name="securityManager" ref="securityManager" />
	</beans:bean>
</beans:beans>
