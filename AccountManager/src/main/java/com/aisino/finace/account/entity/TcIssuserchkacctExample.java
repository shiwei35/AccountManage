package com.aisino.finace.account.entity;

import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;

public class TcIssuserchkacctExample {
    /**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table TC_ISSUSERCHKACCT
	 * @mbggenerated  Sat May 16 12:16:44 CST 2015
	 */
	protected String orderByClause;
	/**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table TC_ISSUSERCHKACCT
	 * @mbggenerated  Sat May 16 12:16:44 CST 2015
	 */
	protected boolean distinct;
	/**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table TC_ISSUSERCHKACCT
	 * @mbggenerated  Sat May 16 12:16:44 CST 2015
	 */
	protected List<Criteria> oredCriteria;

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table TC_ISSUSERCHKACCT
	 * @mbggenerated  Sat May 16 12:16:44 CST 2015
	 */
	public TcIssuserchkacctExample() {
		oredCriteria = new ArrayList<Criteria>();
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table TC_ISSUSERCHKACCT
	 * @mbggenerated  Sat May 16 12:16:44 CST 2015
	 */
	public void setOrderByClause(String orderByClause) {
		this.orderByClause = orderByClause;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table TC_ISSUSERCHKACCT
	 * @mbggenerated  Sat May 16 12:16:44 CST 2015
	 */
	public String getOrderByClause() {
		return orderByClause;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table TC_ISSUSERCHKACCT
	 * @mbggenerated  Sat May 16 12:16:44 CST 2015
	 */
	public void setDistinct(boolean distinct) {
		this.distinct = distinct;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table TC_ISSUSERCHKACCT
	 * @mbggenerated  Sat May 16 12:16:44 CST 2015
	 */
	public boolean isDistinct() {
		return distinct;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table TC_ISSUSERCHKACCT
	 * @mbggenerated  Sat May 16 12:16:44 CST 2015
	 */
	public List<Criteria> getOredCriteria() {
		return oredCriteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table TC_ISSUSERCHKACCT
	 * @mbggenerated  Sat May 16 12:16:44 CST 2015
	 */
	public void or(Criteria criteria) {
		oredCriteria.add(criteria);
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table TC_ISSUSERCHKACCT
	 * @mbggenerated  Sat May 16 12:16:44 CST 2015
	 */
	public Criteria or() {
		Criteria criteria = createCriteriaInternal();
		oredCriteria.add(criteria);
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table TC_ISSUSERCHKACCT
	 * @mbggenerated  Sat May 16 12:16:44 CST 2015
	 */
	public Criteria createCriteria() {
		Criteria criteria = createCriteriaInternal();
		if (oredCriteria.size() == 0) {
			oredCriteria.add(criteria);
		}
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table TC_ISSUSERCHKACCT
	 * @mbggenerated  Sat May 16 12:16:44 CST 2015
	 */
	protected Criteria createCriteriaInternal() {
		Criteria criteria = new Criteria();
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table TC_ISSUSERCHKACCT
	 * @mbggenerated  Sat May 16 12:16:44 CST 2015
	 */
	public void clear() {
		oredCriteria.clear();
		orderByClause = null;
		distinct = false;
	}

	/**
	 * This class was generated by MyBatis Generator. This class corresponds to the database table TC_ISSUSERCHKACCT
	 * @mbggenerated  Sat May 16 12:16:44 CST 2015
	 */
	protected abstract static class GeneratedCriteria {
		protected List<Criterion> criteria;

		protected GeneratedCriteria() {
			super();
			criteria = new ArrayList<Criterion>();
		}

		public boolean isValid() {
			return criteria.size() > 0;
		}

		public List<Criterion> getAllCriteria() {
			return criteria;
		}

		public List<Criterion> getCriteria() {
			return criteria;
		}

		protected void addCriterion(String condition) {
			if (condition == null) {
				throw new RuntimeException("Value for condition cannot be null");
			}
			criteria.add(new Criterion(condition));
		}

		protected void addCriterion(String condition, Object value,
				String property) {
			if (value == null) {
				throw new RuntimeException("Value for " + property
						+ " cannot be null");
			}
			criteria.add(new Criterion(condition, value));
		}

		protected void addCriterion(String condition, Object value1,
				Object value2, String property) {
			if (value1 == null || value2 == null) {
				throw new RuntimeException("Between values for " + property
						+ " cannot be null");
			}
			criteria.add(new Criterion(condition, value1, value2));
		}

		public Criteria andIIssuerchkseqIsNull() {
			addCriterion("I_ISSUERCHKSEQ is null");
			return (Criteria) this;
		}

		public Criteria andIIssuerchkseqIsNotNull() {
			addCriterion("I_ISSUERCHKSEQ is not null");
			return (Criteria) this;
		}

		public Criteria andIIssuerchkseqEqualTo(BigDecimal value) {
			addCriterion("I_ISSUERCHKSEQ =", value, "iIssuerchkseq");
			return (Criteria) this;
		}

		public Criteria andIIssuerchkseqNotEqualTo(BigDecimal value) {
			addCriterion("I_ISSUERCHKSEQ <>", value, "iIssuerchkseq");
			return (Criteria) this;
		}

		public Criteria andIIssuerchkseqGreaterThan(BigDecimal value) {
			addCriterion("I_ISSUERCHKSEQ >", value, "iIssuerchkseq");
			return (Criteria) this;
		}

		public Criteria andIIssuerchkseqGreaterThanOrEqualTo(BigDecimal value) {
			addCriterion("I_ISSUERCHKSEQ >=", value, "iIssuerchkseq");
			return (Criteria) this;
		}

		public Criteria andIIssuerchkseqLessThan(BigDecimal value) {
			addCriterion("I_ISSUERCHKSEQ <", value, "iIssuerchkseq");
			return (Criteria) this;
		}

		public Criteria andIIssuerchkseqLessThanOrEqualTo(BigDecimal value) {
			addCriterion("I_ISSUERCHKSEQ <=", value, "iIssuerchkseq");
			return (Criteria) this;
		}

		public Criteria andIIssuerchkseqIn(List<BigDecimal> values) {
			addCriterion("I_ISSUERCHKSEQ in", values, "iIssuerchkseq");
			return (Criteria) this;
		}

		public Criteria andIIssuerchkseqNotIn(List<BigDecimal> values) {
			addCriterion("I_ISSUERCHKSEQ not in", values, "iIssuerchkseq");
			return (Criteria) this;
		}

		public Criteria andIIssuerchkseqBetween(BigDecimal value1,
				BigDecimal value2) {
			addCriterion("I_ISSUERCHKSEQ between", value1, value2,
					"iIssuerchkseq");
			return (Criteria) this;
		}

		public Criteria andIIssuerchkseqNotBetween(BigDecimal value1,
				BigDecimal value2) {
			addCriterion("I_ISSUERCHKSEQ not between", value1, value2,
					"iIssuerchkseq");
			return (Criteria) this;
		}

		public Criteria andDChkacctdateIsNull() {
			addCriterion("D_CHKACCTDATE is null");
			return (Criteria) this;
		}

		public Criteria andDChkacctdateIsNotNull() {
			addCriterion("D_CHKACCTDATE is not null");
			return (Criteria) this;
		}

		public Criteria andDChkacctdateEqualTo(Date value) {
			addCriterion("D_CHKACCTDATE =", value, "dChkacctdate");
			return (Criteria) this;
		}

		public Criteria andDChkacctdateNotEqualTo(Date value) {
			addCriterion("D_CHKACCTDATE <>", value, "dChkacctdate");
			return (Criteria) this;
		}

		public Criteria andDChkacctdateGreaterThan(Date value) {
			addCriterion("D_CHKACCTDATE >", value, "dChkacctdate");
			return (Criteria) this;
		}

		public Criteria andDChkacctdateGreaterThanOrEqualTo(Date value) {
			addCriterion("D_CHKACCTDATE >=", value, "dChkacctdate");
			return (Criteria) this;
		}

		public Criteria andDChkacctdateLessThan(Date value) {
			addCriterion("D_CHKACCTDATE <", value, "dChkacctdate");
			return (Criteria) this;
		}

		public Criteria andDChkacctdateLessThanOrEqualTo(Date value) {
			addCriterion("D_CHKACCTDATE <=", value, "dChkacctdate");
			return (Criteria) this;
		}

		public Criteria andDChkacctdateIn(List<Date> values) {
			addCriterion("D_CHKACCTDATE in", values, "dChkacctdate");
			return (Criteria) this;
		}

		public Criteria andDChkacctdateNotIn(List<Date> values) {
			addCriterion("D_CHKACCTDATE not in", values, "dChkacctdate");
			return (Criteria) this;
		}

		public Criteria andDChkacctdateBetween(Date value1, Date value2) {
			addCriterion("D_CHKACCTDATE between", value1, value2,
					"dChkacctdate");
			return (Criteria) this;
		}

		public Criteria andDChkacctdateNotBetween(Date value1, Date value2) {
			addCriterion("D_CHKACCTDATE not between", value1, value2,
					"dChkacctdate");
			return (Criteria) this;
		}

		public Criteria andSIssuerusercodeIsNull() {
			addCriterion("S_ISSUERUSERCODE is null");
			return (Criteria) this;
		}

		public Criteria andSIssuerusercodeIsNotNull() {
			addCriterion("S_ISSUERUSERCODE is not null");
			return (Criteria) this;
		}

		public Criteria andSIssuerusercodeEqualTo(String value) {
			addCriterion("S_ISSUERUSERCODE =", value, "sIssuerusercode");
			return (Criteria) this;
		}

		public Criteria andSIssuerusercodeNotEqualTo(String value) {
			addCriterion("S_ISSUERUSERCODE <>", value, "sIssuerusercode");
			return (Criteria) this;
		}

		public Criteria andSIssuerusercodeGreaterThan(String value) {
			addCriterion("S_ISSUERUSERCODE >", value, "sIssuerusercode");
			return (Criteria) this;
		}

		public Criteria andSIssuerusercodeGreaterThanOrEqualTo(String value) {
			addCriterion("S_ISSUERUSERCODE >=", value, "sIssuerusercode");
			return (Criteria) this;
		}

		public Criteria andSIssuerusercodeLessThan(String value) {
			addCriterion("S_ISSUERUSERCODE <", value, "sIssuerusercode");
			return (Criteria) this;
		}

		public Criteria andSIssuerusercodeLessThanOrEqualTo(String value) {
			addCriterion("S_ISSUERUSERCODE <=", value, "sIssuerusercode");
			return (Criteria) this;
		}

		public Criteria andSIssuerusercodeLike(String value) {
			addCriterion("S_ISSUERUSERCODE like", value, "sIssuerusercode");
			return (Criteria) this;
		}

		public Criteria andSIssuerusercodeNotLike(String value) {
			addCriterion("S_ISSUERUSERCODE not like", value, "sIssuerusercode");
			return (Criteria) this;
		}

		public Criteria andSIssuerusercodeIn(List<String> values) {
			addCriterion("S_ISSUERUSERCODE in", values, "sIssuerusercode");
			return (Criteria) this;
		}

		public Criteria andSIssuerusercodeNotIn(List<String> values) {
			addCriterion("S_ISSUERUSERCODE not in", values, "sIssuerusercode");
			return (Criteria) this;
		}

		public Criteria andSIssuerusercodeBetween(String value1, String value2) {
			addCriterion("S_ISSUERUSERCODE between", value1, value2,
					"sIssuerusercode");
			return (Criteria) this;
		}

		public Criteria andSIssuerusercodeNotBetween(String value1,
				String value2) {
			addCriterion("S_ISSUERUSERCODE not between", value1, value2,
					"sIssuerusercode");
			return (Criteria) this;
		}

		public Criteria andIOpencountnumIsNull() {
			addCriterion("I_OPENCOUNTNUM is null");
			return (Criteria) this;
		}

		public Criteria andIOpencountnumIsNotNull() {
			addCriterion("I_OPENCOUNTNUM is not null");
			return (Criteria) this;
		}

		public Criteria andIOpencountnumEqualTo(Integer value) {
			addCriterion("I_OPENCOUNTNUM =", value, "iOpencountnum");
			return (Criteria) this;
		}

		public Criteria andIOpencountnumNotEqualTo(Integer value) {
			addCriterion("I_OPENCOUNTNUM <>", value, "iOpencountnum");
			return (Criteria) this;
		}

		public Criteria andIOpencountnumGreaterThan(Integer value) {
			addCriterion("I_OPENCOUNTNUM >", value, "iOpencountnum");
			return (Criteria) this;
		}

		public Criteria andIOpencountnumGreaterThanOrEqualTo(Integer value) {
			addCriterion("I_OPENCOUNTNUM >=", value, "iOpencountnum");
			return (Criteria) this;
		}

		public Criteria andIOpencountnumLessThan(Integer value) {
			addCriterion("I_OPENCOUNTNUM <", value, "iOpencountnum");
			return (Criteria) this;
		}

		public Criteria andIOpencountnumLessThanOrEqualTo(Integer value) {
			addCriterion("I_OPENCOUNTNUM <=", value, "iOpencountnum");
			return (Criteria) this;
		}

		public Criteria andIOpencountnumIn(List<Integer> values) {
			addCriterion("I_OPENCOUNTNUM in", values, "iOpencountnum");
			return (Criteria) this;
		}

		public Criteria andIOpencountnumNotIn(List<Integer> values) {
			addCriterion("I_OPENCOUNTNUM not in", values, "iOpencountnum");
			return (Criteria) this;
		}

		public Criteria andIOpencountnumBetween(Integer value1, Integer value2) {
			addCriterion("I_OPENCOUNTNUM between", value1, value2,
					"iOpencountnum");
			return (Criteria) this;
		}

		public Criteria andIOpencountnumNotBetween(Integer value1,
				Integer value2) {
			addCriterion("I_OPENCOUNTNUM not between", value1, value2,
					"iOpencountnum");
			return (Criteria) this;
		}

		public Criteria andFOpenamtIsNull() {
			addCriterion("F_OPENAMT is null");
			return (Criteria) this;
		}

		public Criteria andFOpenamtIsNotNull() {
			addCriterion("F_OPENAMT is not null");
			return (Criteria) this;
		}

		public Criteria andFOpenamtEqualTo(BigDecimal value) {
			addCriterion("F_OPENAMT =", value, "fOpenamt");
			return (Criteria) this;
		}

		public Criteria andFOpenamtNotEqualTo(BigDecimal value) {
			addCriterion("F_OPENAMT <>", value, "fOpenamt");
			return (Criteria) this;
		}

		public Criteria andFOpenamtGreaterThan(BigDecimal value) {
			addCriterion("F_OPENAMT >", value, "fOpenamt");
			return (Criteria) this;
		}

		public Criteria andFOpenamtGreaterThanOrEqualTo(BigDecimal value) {
			addCriterion("F_OPENAMT >=", value, "fOpenamt");
			return (Criteria) this;
		}

		public Criteria andFOpenamtLessThan(BigDecimal value) {
			addCriterion("F_OPENAMT <", value, "fOpenamt");
			return (Criteria) this;
		}

		public Criteria andFOpenamtLessThanOrEqualTo(BigDecimal value) {
			addCriterion("F_OPENAMT <=", value, "fOpenamt");
			return (Criteria) this;
		}

		public Criteria andFOpenamtIn(List<BigDecimal> values) {
			addCriterion("F_OPENAMT in", values, "fOpenamt");
			return (Criteria) this;
		}

		public Criteria andFOpenamtNotIn(List<BigDecimal> values) {
			addCriterion("F_OPENAMT not in", values, "fOpenamt");
			return (Criteria) this;
		}

		public Criteria andFOpenamtBetween(BigDecimal value1, BigDecimal value2) {
			addCriterion("F_OPENAMT between", value1, value2, "fOpenamt");
			return (Criteria) this;
		}

		public Criteria andFOpenamtNotBetween(BigDecimal value1,
				BigDecimal value2) {
			addCriterion("F_OPENAMT not between", value1, value2, "fOpenamt");
			return (Criteria) this;
		}

		public Criteria andIGcardcountnumIsNull() {
			addCriterion("I_GCARDCOUNTNUM is null");
			return (Criteria) this;
		}

		public Criteria andIGcardcountnumIsNotNull() {
			addCriterion("I_GCARDCOUNTNUM is not null");
			return (Criteria) this;
		}

		public Criteria andIGcardcountnumEqualTo(Integer value) {
			addCriterion("I_GCARDCOUNTNUM =", value, "iGcardcountnum");
			return (Criteria) this;
		}

		public Criteria andIGcardcountnumNotEqualTo(Integer value) {
			addCriterion("I_GCARDCOUNTNUM <>", value, "iGcardcountnum");
			return (Criteria) this;
		}

		public Criteria andIGcardcountnumGreaterThan(Integer value) {
			addCriterion("I_GCARDCOUNTNUM >", value, "iGcardcountnum");
			return (Criteria) this;
		}

		public Criteria andIGcardcountnumGreaterThanOrEqualTo(Integer value) {
			addCriterion("I_GCARDCOUNTNUM >=", value, "iGcardcountnum");
			return (Criteria) this;
		}

		public Criteria andIGcardcountnumLessThan(Integer value) {
			addCriterion("I_GCARDCOUNTNUM <", value, "iGcardcountnum");
			return (Criteria) this;
		}

		public Criteria andIGcardcountnumLessThanOrEqualTo(Integer value) {
			addCriterion("I_GCARDCOUNTNUM <=", value, "iGcardcountnum");
			return (Criteria) this;
		}

		public Criteria andIGcardcountnumIn(List<Integer> values) {
			addCriterion("I_GCARDCOUNTNUM in", values, "iGcardcountnum");
			return (Criteria) this;
		}

		public Criteria andIGcardcountnumNotIn(List<Integer> values) {
			addCriterion("I_GCARDCOUNTNUM not in", values, "iGcardcountnum");
			return (Criteria) this;
		}

		public Criteria andIGcardcountnumBetween(Integer value1, Integer value2) {
			addCriterion("I_GCARDCOUNTNUM between", value1, value2,
					"iGcardcountnum");
			return (Criteria) this;
		}

		public Criteria andIGcardcountnumNotBetween(Integer value1,
				Integer value2) {
			addCriterion("I_GCARDCOUNTNUM not between", value1, value2,
					"iGcardcountnum");
			return (Criteria) this;
		}

		public Criteria andFGcardsumamtIsNull() {
			addCriterion("F_GCARDSUMAMT is null");
			return (Criteria) this;
		}

		public Criteria andFGcardsumamtIsNotNull() {
			addCriterion("F_GCARDSUMAMT is not null");
			return (Criteria) this;
		}

		public Criteria andFGcardsumamtEqualTo(BigDecimal value) {
			addCriterion("F_GCARDSUMAMT =", value, "fGcardsumamt");
			return (Criteria) this;
		}

		public Criteria andFGcardsumamtNotEqualTo(BigDecimal value) {
			addCriterion("F_GCARDSUMAMT <>", value, "fGcardsumamt");
			return (Criteria) this;
		}

		public Criteria andFGcardsumamtGreaterThan(BigDecimal value) {
			addCriterion("F_GCARDSUMAMT >", value, "fGcardsumamt");
			return (Criteria) this;
		}

		public Criteria andFGcardsumamtGreaterThanOrEqualTo(BigDecimal value) {
			addCriterion("F_GCARDSUMAMT >=", value, "fGcardsumamt");
			return (Criteria) this;
		}

		public Criteria andFGcardsumamtLessThan(BigDecimal value) {
			addCriterion("F_GCARDSUMAMT <", value, "fGcardsumamt");
			return (Criteria) this;
		}

		public Criteria andFGcardsumamtLessThanOrEqualTo(BigDecimal value) {
			addCriterion("F_GCARDSUMAMT <=", value, "fGcardsumamt");
			return (Criteria) this;
		}

		public Criteria andFGcardsumamtIn(List<BigDecimal> values) {
			addCriterion("F_GCARDSUMAMT in", values, "fGcardsumamt");
			return (Criteria) this;
		}

		public Criteria andFGcardsumamtNotIn(List<BigDecimal> values) {
			addCriterion("F_GCARDSUMAMT not in", values, "fGcardsumamt");
			return (Criteria) this;
		}

		public Criteria andFGcardsumamtBetween(BigDecimal value1,
				BigDecimal value2) {
			addCriterion("F_GCARDSUMAMT between", value1, value2,
					"fGcardsumamt");
			return (Criteria) this;
		}

		public Criteria andFGcardsumamtNotBetween(BigDecimal value1,
				BigDecimal value2) {
			addCriterion("F_GCARDSUMAMT not between", value1, value2,
					"fGcardsumamt");
			return (Criteria) this;
		}

		public Criteria andICashcountnumIsNull() {
			addCriterion("I_CASHCOUNTNUM is null");
			return (Criteria) this;
		}

		public Criteria andICashcountnumIsNotNull() {
			addCriterion("I_CASHCOUNTNUM is not null");
			return (Criteria) this;
		}

		public Criteria andICashcountnumEqualTo(Integer value) {
			addCriterion("I_CASHCOUNTNUM =", value, "iCashcountnum");
			return (Criteria) this;
		}

		public Criteria andICashcountnumNotEqualTo(Integer value) {
			addCriterion("I_CASHCOUNTNUM <>", value, "iCashcountnum");
			return (Criteria) this;
		}

		public Criteria andICashcountnumGreaterThan(Integer value) {
			addCriterion("I_CASHCOUNTNUM >", value, "iCashcountnum");
			return (Criteria) this;
		}

		public Criteria andICashcountnumGreaterThanOrEqualTo(Integer value) {
			addCriterion("I_CASHCOUNTNUM >=", value, "iCashcountnum");
			return (Criteria) this;
		}

		public Criteria andICashcountnumLessThan(Integer value) {
			addCriterion("I_CASHCOUNTNUM <", value, "iCashcountnum");
			return (Criteria) this;
		}

		public Criteria andICashcountnumLessThanOrEqualTo(Integer value) {
			addCriterion("I_CASHCOUNTNUM <=", value, "iCashcountnum");
			return (Criteria) this;
		}

		public Criteria andICashcountnumIn(List<Integer> values) {
			addCriterion("I_CASHCOUNTNUM in", values, "iCashcountnum");
			return (Criteria) this;
		}

		public Criteria andICashcountnumNotIn(List<Integer> values) {
			addCriterion("I_CASHCOUNTNUM not in", values, "iCashcountnum");
			return (Criteria) this;
		}

		public Criteria andICashcountnumBetween(Integer value1, Integer value2) {
			addCriterion("I_CASHCOUNTNUM between", value1, value2,
					"iCashcountnum");
			return (Criteria) this;
		}

		public Criteria andICashcountnumNotBetween(Integer value1,
				Integer value2) {
			addCriterion("I_CASHCOUNTNUM not between", value1, value2,
					"iCashcountnum");
			return (Criteria) this;
		}

		public Criteria andFCashsumamtIsNull() {
			addCriterion("F_CASHSUMAMT is null");
			return (Criteria) this;
		}

		public Criteria andFCashsumamtIsNotNull() {
			addCriterion("F_CASHSUMAMT is not null");
			return (Criteria) this;
		}

		public Criteria andFCashsumamtEqualTo(BigDecimal value) {
			addCriterion("F_CASHSUMAMT =", value, "fCashsumamt");
			return (Criteria) this;
		}

		public Criteria andFCashsumamtNotEqualTo(BigDecimal value) {
			addCriterion("F_CASHSUMAMT <>", value, "fCashsumamt");
			return (Criteria) this;
		}

		public Criteria andFCashsumamtGreaterThan(BigDecimal value) {
			addCriterion("F_CASHSUMAMT >", value, "fCashsumamt");
			return (Criteria) this;
		}

		public Criteria andFCashsumamtGreaterThanOrEqualTo(BigDecimal value) {
			addCriterion("F_CASHSUMAMT >=", value, "fCashsumamt");
			return (Criteria) this;
		}

		public Criteria andFCashsumamtLessThan(BigDecimal value) {
			addCriterion("F_CASHSUMAMT <", value, "fCashsumamt");
			return (Criteria) this;
		}

		public Criteria andFCashsumamtLessThanOrEqualTo(BigDecimal value) {
			addCriterion("F_CASHSUMAMT <=", value, "fCashsumamt");
			return (Criteria) this;
		}

		public Criteria andFCashsumamtIn(List<BigDecimal> values) {
			addCriterion("F_CASHSUMAMT in", values, "fCashsumamt");
			return (Criteria) this;
		}

		public Criteria andFCashsumamtNotIn(List<BigDecimal> values) {
			addCriterion("F_CASHSUMAMT not in", values, "fCashsumamt");
			return (Criteria) this;
		}

		public Criteria andFCashsumamtBetween(BigDecimal value1,
				BigDecimal value2) {
			addCriterion("F_CASHSUMAMT between", value1, value2, "fCashsumamt");
			return (Criteria) this;
		}

		public Criteria andFCashsumamtNotBetween(BigDecimal value1,
				BigDecimal value2) {
			addCriterion("F_CASHSUMAMT not between", value1, value2,
					"fCashsumamt");
			return (Criteria) this;
		}

		public Criteria andIBcdpaycountnumIsNull() {
			addCriterion("I_BCDPAYCOUNTNUM is null");
			return (Criteria) this;
		}

		public Criteria andIBcdpaycountnumIsNotNull() {
			addCriterion("I_BCDPAYCOUNTNUM is not null");
			return (Criteria) this;
		}

		public Criteria andIBcdpaycountnumEqualTo(Integer value) {
			addCriterion("I_BCDPAYCOUNTNUM =", value, "iBcdpaycountnum");
			return (Criteria) this;
		}

		public Criteria andIBcdpaycountnumNotEqualTo(Integer value) {
			addCriterion("I_BCDPAYCOUNTNUM <>", value, "iBcdpaycountnum");
			return (Criteria) this;
		}

		public Criteria andIBcdpaycountnumGreaterThan(Integer value) {
			addCriterion("I_BCDPAYCOUNTNUM >", value, "iBcdpaycountnum");
			return (Criteria) this;
		}

		public Criteria andIBcdpaycountnumGreaterThanOrEqualTo(Integer value) {
			addCriterion("I_BCDPAYCOUNTNUM >=", value, "iBcdpaycountnum");
			return (Criteria) this;
		}

		public Criteria andIBcdpaycountnumLessThan(Integer value) {
			addCriterion("I_BCDPAYCOUNTNUM <", value, "iBcdpaycountnum");
			return (Criteria) this;
		}

		public Criteria andIBcdpaycountnumLessThanOrEqualTo(Integer value) {
			addCriterion("I_BCDPAYCOUNTNUM <=", value, "iBcdpaycountnum");
			return (Criteria) this;
		}

		public Criteria andIBcdpaycountnumIn(List<Integer> values) {
			addCriterion("I_BCDPAYCOUNTNUM in", values, "iBcdpaycountnum");
			return (Criteria) this;
		}

		public Criteria andIBcdpaycountnumNotIn(List<Integer> values) {
			addCriterion("I_BCDPAYCOUNTNUM not in", values, "iBcdpaycountnum");
			return (Criteria) this;
		}

		public Criteria andIBcdpaycountnumBetween(Integer value1, Integer value2) {
			addCriterion("I_BCDPAYCOUNTNUM between", value1, value2,
					"iBcdpaycountnum");
			return (Criteria) this;
		}

		public Criteria andIBcdpaycountnumNotBetween(Integer value1,
				Integer value2) {
			addCriterion("I_BCDPAYCOUNTNUM not between", value1, value2,
					"iBcdpaycountnum");
			return (Criteria) this;
		}

		public Criteria andFBcdpaysumamtIsNull() {
			addCriterion("F_BCDPAYSUMAMT is null");
			return (Criteria) this;
		}

		public Criteria andFBcdpaysumamtIsNotNull() {
			addCriterion("F_BCDPAYSUMAMT is not null");
			return (Criteria) this;
		}

		public Criteria andFBcdpaysumamtEqualTo(BigDecimal value) {
			addCriterion("F_BCDPAYSUMAMT =", value, "fBcdpaysumamt");
			return (Criteria) this;
		}

		public Criteria andFBcdpaysumamtNotEqualTo(BigDecimal value) {
			addCriterion("F_BCDPAYSUMAMT <>", value, "fBcdpaysumamt");
			return (Criteria) this;
		}

		public Criteria andFBcdpaysumamtGreaterThan(BigDecimal value) {
			addCriterion("F_BCDPAYSUMAMT >", value, "fBcdpaysumamt");
			return (Criteria) this;
		}

		public Criteria andFBcdpaysumamtGreaterThanOrEqualTo(BigDecimal value) {
			addCriterion("F_BCDPAYSUMAMT >=", value, "fBcdpaysumamt");
			return (Criteria) this;
		}

		public Criteria andFBcdpaysumamtLessThan(BigDecimal value) {
			addCriterion("F_BCDPAYSUMAMT <", value, "fBcdpaysumamt");
			return (Criteria) this;
		}

		public Criteria andFBcdpaysumamtLessThanOrEqualTo(BigDecimal value) {
			addCriterion("F_BCDPAYSUMAMT <=", value, "fBcdpaysumamt");
			return (Criteria) this;
		}

		public Criteria andFBcdpaysumamtIn(List<BigDecimal> values) {
			addCriterion("F_BCDPAYSUMAMT in", values, "fBcdpaysumamt");
			return (Criteria) this;
		}

		public Criteria andFBcdpaysumamtNotIn(List<BigDecimal> values) {
			addCriterion("F_BCDPAYSUMAMT not in", values, "fBcdpaysumamt");
			return (Criteria) this;
		}

		public Criteria andFBcdpaysumamtBetween(BigDecimal value1,
				BigDecimal value2) {
			addCriterion("F_BCDPAYSUMAMT between", value1, value2,
					"fBcdpaysumamt");
			return (Criteria) this;
		}

		public Criteria andFBcdpaysumamtNotBetween(BigDecimal value1,
				BigDecimal value2) {
			addCriterion("F_BCDPAYSUMAMT not between", value1, value2,
					"fBcdpaysumamt");
			return (Criteria) this;
		}

		public Criteria andIConsumecountnumIsNull() {
			addCriterion("I_CONSUMECOUNTNUM is null");
			return (Criteria) this;
		}

		public Criteria andIConsumecountnumIsNotNull() {
			addCriterion("I_CONSUMECOUNTNUM is not null");
			return (Criteria) this;
		}

		public Criteria andIConsumecountnumEqualTo(Integer value) {
			addCriterion("I_CONSUMECOUNTNUM =", value, "iConsumecountnum");
			return (Criteria) this;
		}

		public Criteria andIConsumecountnumNotEqualTo(Integer value) {
			addCriterion("I_CONSUMECOUNTNUM <>", value, "iConsumecountnum");
			return (Criteria) this;
		}

		public Criteria andIConsumecountnumGreaterThan(Integer value) {
			addCriterion("I_CONSUMECOUNTNUM >", value, "iConsumecountnum");
			return (Criteria) this;
		}

		public Criteria andIConsumecountnumGreaterThanOrEqualTo(Integer value) {
			addCriterion("I_CONSUMECOUNTNUM >=", value, "iConsumecountnum");
			return (Criteria) this;
		}

		public Criteria andIConsumecountnumLessThan(Integer value) {
			addCriterion("I_CONSUMECOUNTNUM <", value, "iConsumecountnum");
			return (Criteria) this;
		}

		public Criteria andIConsumecountnumLessThanOrEqualTo(Integer value) {
			addCriterion("I_CONSUMECOUNTNUM <=", value, "iConsumecountnum");
			return (Criteria) this;
		}

		public Criteria andIConsumecountnumIn(List<Integer> values) {
			addCriterion("I_CONSUMECOUNTNUM in", values, "iConsumecountnum");
			return (Criteria) this;
		}

		public Criteria andIConsumecountnumNotIn(List<Integer> values) {
			addCriterion("I_CONSUMECOUNTNUM not in", values, "iConsumecountnum");
			return (Criteria) this;
		}

		public Criteria andIConsumecountnumBetween(Integer value1,
				Integer value2) {
			addCriterion("I_CONSUMECOUNTNUM between", value1, value2,
					"iConsumecountnum");
			return (Criteria) this;
		}

		public Criteria andIConsumecountnumNotBetween(Integer value1,
				Integer value2) {
			addCriterion("I_CONSUMECOUNTNUM not between", value1, value2,
					"iConsumecountnum");
			return (Criteria) this;
		}

		public Criteria andFConsumesumamtIsNull() {
			addCriterion("F_CONSUMESUMAMT is null");
			return (Criteria) this;
		}

		public Criteria andFConsumesumamtIsNotNull() {
			addCriterion("F_CONSUMESUMAMT is not null");
			return (Criteria) this;
		}

		public Criteria andFConsumesumamtEqualTo(BigDecimal value) {
			addCriterion("F_CONSUMESUMAMT =", value, "fConsumesumamt");
			return (Criteria) this;
		}

		public Criteria andFConsumesumamtNotEqualTo(BigDecimal value) {
			addCriterion("F_CONSUMESUMAMT <>", value, "fConsumesumamt");
			return (Criteria) this;
		}

		public Criteria andFConsumesumamtGreaterThan(BigDecimal value) {
			addCriterion("F_CONSUMESUMAMT >", value, "fConsumesumamt");
			return (Criteria) this;
		}

		public Criteria andFConsumesumamtGreaterThanOrEqualTo(BigDecimal value) {
			addCriterion("F_CONSUMESUMAMT >=", value, "fConsumesumamt");
			return (Criteria) this;
		}

		public Criteria andFConsumesumamtLessThan(BigDecimal value) {
			addCriterion("F_CONSUMESUMAMT <", value, "fConsumesumamt");
			return (Criteria) this;
		}

		public Criteria andFConsumesumamtLessThanOrEqualTo(BigDecimal value) {
			addCriterion("F_CONSUMESUMAMT <=", value, "fConsumesumamt");
			return (Criteria) this;
		}

		public Criteria andFConsumesumamtIn(List<BigDecimal> values) {
			addCriterion("F_CONSUMESUMAMT in", values, "fConsumesumamt");
			return (Criteria) this;
		}

		public Criteria andFConsumesumamtNotIn(List<BigDecimal> values) {
			addCriterion("F_CONSUMESUMAMT not in", values, "fConsumesumamt");
			return (Criteria) this;
		}

		public Criteria andFConsumesumamtBetween(BigDecimal value1,
				BigDecimal value2) {
			addCriterion("F_CONSUMESUMAMT between", value1, value2,
					"fConsumesumamt");
			return (Criteria) this;
		}

		public Criteria andFConsumesumamtNotBetween(BigDecimal value1,
				BigDecimal value2) {
			addCriterion("F_CONSUMESUMAMT not between", value1, value2,
					"fConsumesumamt");
			return (Criteria) this;
		}

		public Criteria andIRefundcountnumIsNull() {
			addCriterion("I_REFUNDCOUNTNUM is null");
			return (Criteria) this;
		}

		public Criteria andIRefundcountnumIsNotNull() {
			addCriterion("I_REFUNDCOUNTNUM is not null");
			return (Criteria) this;
		}

		public Criteria andIRefundcountnumEqualTo(Integer value) {
			addCriterion("I_REFUNDCOUNTNUM =", value, "iRefundcountnum");
			return (Criteria) this;
		}

		public Criteria andIRefundcountnumNotEqualTo(Integer value) {
			addCriterion("I_REFUNDCOUNTNUM <>", value, "iRefundcountnum");
			return (Criteria) this;
		}

		public Criteria andIRefundcountnumGreaterThan(Integer value) {
			addCriterion("I_REFUNDCOUNTNUM >", value, "iRefundcountnum");
			return (Criteria) this;
		}

		public Criteria andIRefundcountnumGreaterThanOrEqualTo(Integer value) {
			addCriterion("I_REFUNDCOUNTNUM >=", value, "iRefundcountnum");
			return (Criteria) this;
		}

		public Criteria andIRefundcountnumLessThan(Integer value) {
			addCriterion("I_REFUNDCOUNTNUM <", value, "iRefundcountnum");
			return (Criteria) this;
		}

		public Criteria andIRefundcountnumLessThanOrEqualTo(Integer value) {
			addCriterion("I_REFUNDCOUNTNUM <=", value, "iRefundcountnum");
			return (Criteria) this;
		}

		public Criteria andIRefundcountnumIn(List<Integer> values) {
			addCriterion("I_REFUNDCOUNTNUM in", values, "iRefundcountnum");
			return (Criteria) this;
		}

		public Criteria andIRefundcountnumNotIn(List<Integer> values) {
			addCriterion("I_REFUNDCOUNTNUM not in", values, "iRefundcountnum");
			return (Criteria) this;
		}

		public Criteria andIRefundcountnumBetween(Integer value1, Integer value2) {
			addCriterion("I_REFUNDCOUNTNUM between", value1, value2,
					"iRefundcountnum");
			return (Criteria) this;
		}

		public Criteria andIRefundcountnumNotBetween(Integer value1,
				Integer value2) {
			addCriterion("I_REFUNDCOUNTNUM not between", value1, value2,
					"iRefundcountnum");
			return (Criteria) this;
		}

		public Criteria andFRefundsumamtIsNull() {
			addCriterion("F_REFUNDSUMAMT is null");
			return (Criteria) this;
		}

		public Criteria andFRefundsumamtIsNotNull() {
			addCriterion("F_REFUNDSUMAMT is not null");
			return (Criteria) this;
		}

		public Criteria andFRefundsumamtEqualTo(BigDecimal value) {
			addCriterion("F_REFUNDSUMAMT =", value, "fRefundsumamt");
			return (Criteria) this;
		}

		public Criteria andFRefundsumamtNotEqualTo(BigDecimal value) {
			addCriterion("F_REFUNDSUMAMT <>", value, "fRefundsumamt");
			return (Criteria) this;
		}

		public Criteria andFRefundsumamtGreaterThan(BigDecimal value) {
			addCriterion("F_REFUNDSUMAMT >", value, "fRefundsumamt");
			return (Criteria) this;
		}

		public Criteria andFRefundsumamtGreaterThanOrEqualTo(BigDecimal value) {
			addCriterion("F_REFUNDSUMAMT >=", value, "fRefundsumamt");
			return (Criteria) this;
		}

		public Criteria andFRefundsumamtLessThan(BigDecimal value) {
			addCriterion("F_REFUNDSUMAMT <", value, "fRefundsumamt");
			return (Criteria) this;
		}

		public Criteria andFRefundsumamtLessThanOrEqualTo(BigDecimal value) {
			addCriterion("F_REFUNDSUMAMT <=", value, "fRefundsumamt");
			return (Criteria) this;
		}

		public Criteria andFRefundsumamtIn(List<BigDecimal> values) {
			addCriterion("F_REFUNDSUMAMT in", values, "fRefundsumamt");
			return (Criteria) this;
		}

		public Criteria andFRefundsumamtNotIn(List<BigDecimal> values) {
			addCriterion("F_REFUNDSUMAMT not in", values, "fRefundsumamt");
			return (Criteria) this;
		}

		public Criteria andFRefundsumamtBetween(BigDecimal value1,
				BigDecimal value2) {
			addCriterion("F_REFUNDSUMAMT between", value1, value2,
					"fRefundsumamt");
			return (Criteria) this;
		}

		public Criteria andFRefundsumamtNotBetween(BigDecimal value1,
				BigDecimal value2) {
			addCriterion("F_REFUNDSUMAMT not between", value1, value2,
					"fRefundsumamt");
			return (Criteria) this;
		}

		public Criteria andTsSysupdateIsNull() {
			addCriterion("TS_SYSUPDATE is null");
			return (Criteria) this;
		}

		public Criteria andTsSysupdateIsNotNull() {
			addCriterion("TS_SYSUPDATE is not null");
			return (Criteria) this;
		}

		public Criteria andTsSysupdateEqualTo(Date value) {
			addCriterion("TS_SYSUPDATE =", value, "tsSysupdate");
			return (Criteria) this;
		}

		public Criteria andTsSysupdateNotEqualTo(Date value) {
			addCriterion("TS_SYSUPDATE <>", value, "tsSysupdate");
			return (Criteria) this;
		}

		public Criteria andTsSysupdateGreaterThan(Date value) {
			addCriterion("TS_SYSUPDATE >", value, "tsSysupdate");
			return (Criteria) this;
		}

		public Criteria andTsSysupdateGreaterThanOrEqualTo(Date value) {
			addCriterion("TS_SYSUPDATE >=", value, "tsSysupdate");
			return (Criteria) this;
		}

		public Criteria andTsSysupdateLessThan(Date value) {
			addCriterion("TS_SYSUPDATE <", value, "tsSysupdate");
			return (Criteria) this;
		}

		public Criteria andTsSysupdateLessThanOrEqualTo(Date value) {
			addCriterion("TS_SYSUPDATE <=", value, "tsSysupdate");
			return (Criteria) this;
		}

		public Criteria andTsSysupdateIn(List<Date> values) {
			addCriterion("TS_SYSUPDATE in", values, "tsSysupdate");
			return (Criteria) this;
		}

		public Criteria andTsSysupdateNotIn(List<Date> values) {
			addCriterion("TS_SYSUPDATE not in", values, "tsSysupdate");
			return (Criteria) this;
		}

		public Criteria andTsSysupdateBetween(Date value1, Date value2) {
			addCriterion("TS_SYSUPDATE between", value1, value2, "tsSysupdate");
			return (Criteria) this;
		}

		public Criteria andTsSysupdateNotBetween(Date value1, Date value2) {
			addCriterion("TS_SYSUPDATE not between", value1, value2,
					"tsSysupdate");
			return (Criteria) this;
		}
	}

	/**
	 * This class was generated by MyBatis Generator. This class corresponds to the database table TC_ISSUSERCHKACCT
	 * @mbggenerated  Sat May 16 12:16:44 CST 2015
	 */
	public static class Criterion {
		private String condition;
		private Object value;
		private Object secondValue;
		private boolean noValue;
		private boolean singleValue;
		private boolean betweenValue;
		private boolean listValue;
		private String typeHandler;

		public String getCondition() {
			return condition;
		}

		public Object getValue() {
			return value;
		}

		public Object getSecondValue() {
			return secondValue;
		}

		public boolean isNoValue() {
			return noValue;
		}

		public boolean isSingleValue() {
			return singleValue;
		}

		public boolean isBetweenValue() {
			return betweenValue;
		}

		public boolean isListValue() {
			return listValue;
		}

		public String getTypeHandler() {
			return typeHandler;
		}

		protected Criterion(String condition) {
			super();
			this.condition = condition;
			this.typeHandler = null;
			this.noValue = true;
		}

		protected Criterion(String condition, Object value, String typeHandler) {
			super();
			this.condition = condition;
			this.value = value;
			this.typeHandler = typeHandler;
			if (value instanceof List<?>) {
				this.listValue = true;
			} else {
				this.singleValue = true;
			}
		}

		protected Criterion(String condition, Object value) {
			this(condition, value, null);
		}

		protected Criterion(String condition, Object value, Object secondValue,
				String typeHandler) {
			super();
			this.condition = condition;
			this.value = value;
			this.secondValue = secondValue;
			this.typeHandler = typeHandler;
			this.betweenValue = true;
		}

		protected Criterion(String condition, Object value, Object secondValue) {
			this(condition, value, secondValue, null);
		}
	}

	/**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table TC_ISSUSERCHKACCT
     *
     * @mbggenerated do_not_delete_during_merge Sat May 16 11:09:50 CST 2015
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }
}